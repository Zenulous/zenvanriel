{"version":3,"file":"component---src-pages-browser-game-tsx-dbd7e31ff74a5b2a47c3.js","mappings":"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","sources":["webpack://zenvanriel/./src/hooks/use-site-metadata.tsx","webpack://zenvanriel/./src/components/seo.tsx","webpack://zenvanriel/./src/pages/browser-game.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterUsername\n          image\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import React from \"react\";\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  children?: string;\n}\n\nexport const SEO = ({ title, description, pathname, children }: SEOProps) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image,\n    siteUrl,\n    twitterUsername,\n  } = useSiteMetadata();\n  console.log(useSiteMetadata);\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    url: `${siteUrl}${pathname || ``}`,\n    twitterUsername,\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\n      <link rel=\"icon\" href=\"/icon.png\" />\n      {children}\n    </>\n  );\n};\n","import React from \"react\";\nimport \"../css/browser-game.css\";\nimport { SEO } from \"../components/seo\";\n\nexport default class BrowserGame extends React.Component {\n  gameCanvas!: HTMLCanvasElement;\n\n  state = {\n    showGame: false,\n  };\n\n  constructor(props: any) {\n    super(props);\n    this.handleShowGameState = this.handleShowGameState.bind(this);\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    const script = document.createElement(\"script\");\n\n    script.src = \"../bluehat/processing.reactified.min.js\";\n    script.async = false;\n\n    document.body.appendChild(script);\n    window.addEventListener(\"resize\", this.handleShowGameState);\n    this.handleShowGameState();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleShowGameState);\n  }\n\n  componentDidUpdate() {\n    if (this.state.showGame) {\n      let scaler = document.documentElement.clientWidth / 1700;\n      if (scaler > 0.85) {\n        scaler = 0.85;\n      }\n      this.gameCanvas.style.transform = `scale(${scaler}, ${scaler})`;\n      this.gameCanvas.style.transformOrigin = \"top left\";\n      this.gameCanvas.style.display = \"block\";\n    } else {\n      this.gameCanvas.style.display = \"none\";\n    }\n  }\n\n  handleShowGameState() {\n    const windowThreshold = 500;\n    if (document.documentElement.clientWidth <= windowThreshold) {\n      this.setState({ showGame: false });\n      return;\n    }\n\n    if (document.documentElement.clientWidth > windowThreshold) {\n      this.setState({ showGame: true });\n    }\n  }\n\n  render() {\n    const mainGameInformation = this.state.showGame ? (\n      <div>\n        <p>\n          This is a small game fully playable in your browser (1-2 players). The\n          purpose of the game is to survive and accumulate points for as long as\n          possible. You have 2 types of obstacles in your way: enemies and the\n          time limit. Enemies can simply be avoided, while you have to extend\n          the time limit yourself by collecting green clocks. Note: currently\n          only keyboard controls are supported.\n        </p>\n      </div>\n    ) : (\n      <div>\n        <p>\n          Your browser does not support this game. This could be because you are\n          on a mobile device. If you are on a desktop, please enlarge the width\n          of your browser window.\n        </p>\n      </div>\n    );\n\n    const subGameInformation = this.state.showGame ? (\n      <div className=\"right-aligned-content-footer\">\n        <button onClick={() => this.gameCanvas!.requestFullscreen()}>\n          Enable Fullscreen\n        </button>\n\n        <i>\n          Assets retrieved from{\" \"}\n          <a href=\"https://opengameart.org/\">Open Game Art</a>\n        </i>\n      </div>\n    ) : (\n      <div></div>\n    );\n\n    return (\n      <div>\n        <div className=\"container\">\n          <h1>Browser Game</h1>\n          {mainGameInformation}\n          <canvas\n            ref={(ref) => (this.gameCanvas = ref as HTMLCanvasElement)}\n            data-processing-sources=\"../bluehat/bluehat.pde\"\n            width=\"1280\"\n            height=\"720\"\n          />\n          {subGameInformation}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const Head = () => <SEO />;\n"],"names":["useSiteMetadata","useStaticQuery","site","siteMetadata","SEO","_ref","title","description","pathname","children","_useSiteMetadata","defaultTitle","defaultDescription","image","siteUrl","twitterUsername","console","log","seo","url","React","name","content","rel","href","BrowserGame","_React$Component","props","_this","call","state","showGame","handleShowGameState","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","componentDidMount","script","document","createElement","src","async","body","appendChild","window","addEventListener","this","componentWillUnmount","removeEventListener","componentDidUpdate","scaler","documentElement","clientWidth","gameCanvas","style","transform","transformOrigin","display","setState","render","_this2","mainGameInformation","subGameInformation","className","onClick","requestFullscreen","ref","width","height","Head"],"sourceRoot":""}